plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
    id "io.freefair.lombok" version "8.6" apply false
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}
allprojects {
    repositories {
        mavenCentral()
        maven { url = 'https://maven.nucleoid.xyz/' }
        maven { url "https://maven.mrnavastar.rocks/releases" }
        maven { url "https://repo.papermc.io/repository/maven-public/" }
        maven { url "https://api.modrinth.com/maven" }
    }


    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"
        options.release = project.javaVersion as Integer
    }
}


dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation include ('xyz.nucleoid:fantasy:0.6.3+1.21')
    implementation "me.mrnavastar.protoweaver:fabric:1.0.7"

}

subprojects {
    apply plugin: "java"
    apply plugin: "io.freefair.lombok"

    dependencies {
        compileOnly "me.mrnavastar.protoweaver:common:${project.protoweaver_version}"
        compileOnly "com.esotericsoftware:kryo5:${project.kyro_version}"
        compileOnly "org.projectlombok:lombok:${project.lombok_version}"
        annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"
    }

    task jarSources(type:Jar){
        archiveClassifier.set("sources")
        exclude {
            sourceSets.main.allSource.contains it.file
        }
        from delombok
    }

    jar.finalizedBy(jarSources)
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
